export const address = '0x7d1981603530aa76db92186da40092c5394b7635' as `0x${string}`;

export const abi = [
  {
    inputs: [
      { internalType: 'string', name: 'name', type: 'string' },
      { internalType: 'string', name: 'version', type: 'string' },
      { internalType: 'address', name: 'initGovernance', type: 'address' },
      { internalType: 'uint128', name: 'initMinDonationBPS', type: 'uint128' },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [{ internalType: 'address', name: 'target', type: 'address' }],
    name: 'AddressEmptyCode',
    type: 'error',
  },
  { inputs: [], name: 'ChallengeJoined', type: 'error' },
  { inputs: [], name: 'ChallengeNotExist', type: 'error' },
  { inputs: [], name: 'ChallengeNotJoined', type: 'error' },
  { inputs: [], name: 'ChallengeNotSettled', type: 'error' },
  { inputs: [], name: 'ChallengeSettled', type: 'error' },
  { inputs: [], name: 'CheckInJudgeError', type: 'error' },
  { inputs: [], name: 'DigestUsed', type: 'error' },
  { inputs: [], name: 'FailedCall', type: 'error' },
  {
    inputs: [
      { internalType: 'uint256', name: 'balance', type: 'uint256' },
      { internalType: 'uint256', name: 'needed', type: 'uint256' },
    ],
    name: 'InsufficientBalance',
    type: 'error',
  },
  { inputs: [], name: 'InvalidBPS', type: 'error' },
  { inputs: [], name: 'InvalidPermission', type: 'error' },
  { inputs: [], name: 'InvalidShortString', type: 'error' },
  { inputs: [], name: 'InvalidSignature', type: 'error' },
  { inputs: [], name: 'InvalidTimestamp', type: 'error' },
  {
    inputs: [{ internalType: 'address', name: 'owner', type: 'address' }],
    name: 'OwnableInvalidOwner',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
    name: 'OwnableUnauthorizedAccount',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'address', name: 'token', type: 'address' }],
    name: 'SafeERC20FailedOperation',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'string', name: 'str', type: 'string' }],
    name: 'StringTooLong',
    type: 'error',
  },
  { inputs: [], name: 'UserNotClaimable', type: 'error' },
  { inputs: [], name: 'ZeroAddress', type: 'error' },
  { inputs: [], name: 'ZeroAmount', type: 'error' },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'user', type: 'address' },
      { indexed: true, internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { indexed: false, internalType: 'bytes', name: 'checkInData', type: 'bytes' },
    ],
    name: 'CheckIn',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'user', type: 'address' },
      { indexed: true, internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },
    ],
    name: 'Claim',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      {
        components: [
          { internalType: 'address', name: 'verifier', type: 'address' },
          { internalType: 'uint64', name: 'minimumCheckIns', type: 'uint64' },
          { internalType: 'uint64', name: 'startTimestamp', type: 'uint64' },
          { internalType: 'uint64', name: 'joinDueTimestamp', type: 'uint64' },
          { internalType: 'uint64', name: 'endTimestamp', type: 'uint64' },
          { internalType: 'address', name: 'donateDestination', type: 'address' },
          { internalType: 'address', name: 'checkInJudge', type: 'address' },
          { internalType: 'address', name: 'asset', type: 'address' },
          { internalType: 'uint128', name: 'donationBPS', type: 'uint128' },
          { internalType: 'uint128', name: 'stakePerUser', type: 'uint128' },
        ],
        indexed: false,
        internalType: 'struct IChallenges.Challenge',
        name: 'challenge',
        type: 'tuple',
      },
    ],
    name: 'Create',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'address', name: 'donationOrg', type: 'address' },
      { indexed: false, internalType: 'bool', name: 'status', type: 'bool' },
    ],
    name: 'DonationOrgSet',
    type: 'event',
  },
  { anonymous: false, inputs: [], name: 'EIP712DomainChanged', type: 'event' },
  {
    anonymous: false,
    inputs: [{ indexed: true, internalType: 'address', name: 'newGovernance', type: 'address' }],
    name: 'GovernanceTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'user', type: 'address' },
      { indexed: true, internalType: 'uint256', name: 'challengeId', type: 'uint256' },
    ],
    name: 'Join',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'newMinDonationBPS', type: 'uint256' },
    ],
    name: 'MinDonationBPSSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'previousOwner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'newOwner', type: 'address' },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: true, internalType: 'uint256', name: 'challengeId', type: 'uint256' }],
    name: 'Settle',
    type: 'event',
  },
  {
    inputs: [],
    name: 'MAX_BPS',
    outputs: [{ internalType: 'uint128', name: '', type: 'uint128' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'challengeCounter',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'challengeId', type: 'uint256' }],
    name: 'challengeStatus',
    outputs: [{ internalType: 'enum IChallenges.ChallengeStatus', name: '', type: 'uint8' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { internalType: 'bytes', name: 'checkInData', type: 'bytes' },
      { internalType: 'bytes', name: 'signature', type: 'bytes' },
    ],
    name: 'checkIn',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { internalType: 'address', name: 'user', type: 'address' },
      { internalType: 'uint256', name: '', type: 'uint256' },
    ],
    name: 'checkIns',
    outputs: [{ internalType: 'bytes', name: '', type: 'bytes' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'address', name: 'verifier', type: 'address' },
          { internalType: 'uint64', name: 'minimumCheckIns', type: 'uint64' },
          { internalType: 'uint64', name: 'startTimestamp', type: 'uint64' },
          { internalType: 'uint64', name: 'joinDueTimestamp', type: 'uint64' },
          { internalType: 'uint64', name: 'endTimestamp', type: 'uint64' },
          { internalType: 'address', name: 'donateDestination', type: 'address' },
          { internalType: 'address', name: 'checkInJudge', type: 'address' },
          { internalType: 'address', name: 'asset', type: 'address' },
          { internalType: 'uint128', name: 'donationBPS', type: 'uint128' },
          { internalType: 'uint128', name: 'stakePerUser', type: 'uint128' },
        ],
        internalType: 'struct IChallenges.Challenge',
        name: 'challenge',
        type: 'tuple',
      },
    ],
    name: 'create',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32', name: 'digest', type: 'bytes32' }],
    name: 'digestUsed',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'donationOrg', type: 'address' }],
    name: 'donationOrgsEnabled',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'eip712Domain',
    outputs: [
      { internalType: 'bytes1', name: 'fields', type: 'bytes1' },
      { internalType: 'string', name: 'name', type: 'string' },
      { internalType: 'string', name: 'version', type: 'string' },
      { internalType: 'uint256', name: 'chainId', type: 'uint256' },
      { internalType: 'address', name: 'verifyingContract', type: 'address' },
      { internalType: 'bytes32', name: 'salt', type: 'bytes32' },
      { internalType: 'uint256[]', name: 'extensions', type: 'uint256[]' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'challengeId', type: 'uint256' }],
    name: 'getChallenge',
    outputs: [
      {
        components: [
          { internalType: 'address', name: 'verifier', type: 'address' },
          { internalType: 'uint64', name: 'minimumCheckIns', type: 'uint64' },
          { internalType: 'uint64', name: 'startTimestamp', type: 'uint64' },
          { internalType: 'uint64', name: 'joinDueTimestamp', type: 'uint64' },
          { internalType: 'uint64', name: 'endTimestamp', type: 'uint64' },
          { internalType: 'address', name: 'donateDestination', type: 'address' },
          { internalType: 'address', name: 'checkInJudge', type: 'address' },
          { internalType: 'address', name: 'asset', type: 'address' },
          { internalType: 'uint128', name: 'donationBPS', type: 'uint128' },
          { internalType: 'uint128', name: 'stakePerUser', type: 'uint128' },
        ],
        internalType: 'struct IChallenges.Challenge',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { internalType: 'bytes', name: 'checkInData', type: 'bytes' },
    ],
    name: 'getCheckInDigest',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { internalType: 'address', name: 'user', type: 'address' },
    ],
    name: 'getUserCheckInCounts',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'challengeId', type: 'uint256' }],
    name: 'getWinningStakePerUser',
    outputs: [{ internalType: 'uint128', name: '', type: 'uint128' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'challengeId', type: 'uint256' }],
    name: 'join',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minDonationBPS',
    outputs: [{ internalType: 'uint128', name: '', type: 'uint128' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'donationOrg', type: 'address' },
      { internalType: 'bool', name: 'enabled', type: 'bool' },
    ],
    name: 'setDonationOrgEnabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint128', name: '_minDonationBPS', type: 'uint128' }],
    name: 'setMinDonationBPS',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'challengeId', type: 'uint256' }],
    name: 'settle',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'challengeId', type: 'uint256' }],
    name: 'totalSucceedUsers',
    outputs: [{ internalType: 'uint128', name: '', type: 'uint128' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'challengeId', type: 'uint256' }],
    name: 'totalUsers',
    outputs: [{ internalType: 'uint128', name: '', type: 'uint128' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { internalType: 'address', name: 'user', type: 'address' },
    ],
    name: 'userStatus',
    outputs: [{ internalType: 'enum IChallenges.UserStatus', name: '', type: 'uint8' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'challengeId', type: 'uint256' }],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;
